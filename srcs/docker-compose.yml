version: '3.8'
services:
  mariadb:
    image: mariadb:42_inception
    build:
      context: ./requirements/mariadb
      dockerfile: Dockerfile
    ports:
      - "3306:3306"
    env_file:
      .env
    environment:
      - MYSQL_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MARIADB_DATABASE}
      - MYSQL_USER=${MARIADB_USER}
      - MYSQL_PASSWORD=${MARIADB_PASSWORD}
    volumes:
      - ./requirements/mariadb/conf/mariadb.cnf:/etc/mysql/mariadb.cnf
      - ./requirements/mariadb/conf/50-server.cnf:/etc/mysql/mariadb.conf.d/50-server.cnf
      - data-db:/var/lib/mysql # 初回でここがどうbindされているか？
#      - data-db:/var/lib/mariadb
    networks:
      - docker-network
    restart: always

  wordpress:
    image: wordpress:42_inception
    build:
      context: ./requirements/wordpress
      dockerfile: Dockerfile
    ports:
      - "9000:80"
    env_file:
      .env
    environment:
      - MARIADB_DATABASE=${MARIADB_DATABASE}
      - MARIADB_USER=${MARIADB_USER}
      - MARIADB_PASSWORD=${MARIADB_PASSWORD}
      - WORDPRESS_DB_HOST=${WORDPRESS_DB_HOST}
      - DOMAIN_NAME=${DOMAIN_NAME}
      - WORDPRESS_TITLE=${WORDPRESS_TITLE}
      - WORDPRESS_ADMIN_USER=${WORDPRESS_ADMIN_USER}
      - WORDPRESS_ADMIN_PASSWORD=${WORDPRESS_ADMIN_PASSWORD}
      - WORDPRESS_ADMIN_EMAIL=${WORDPRESS_ADMIN_EMAIL}
    volumes:
      - ./requirements/wordpress/conf/www.conf:/etc/php/8.2/fpm/pool.d/www.conf
      - ./requirements/wordpress/conf/php-fpm.conf:/etc/php/8.2/fpm/php-fpm.conf
      - data-wp:/var/www/html/wp
    networks:
      - docker-network
    restart: always
    depends_on:
      - mariadb
#      mariadb:
#        condition: service_healthy

  nginx:
    image: nginx:42_inception
    build:
      context: ./requirements/nginx
      dockerfile: Dockerfile
    ports:
      - "443:443"
    volumes:
      - data-wp:/var/www/html/wp
    networks:
      - docker-network
    restart: always
    depends_on:
      - mariadb
      - wordpress
#      mariadb:
#        condition: service_healthy
#      wordpress:
#        condition: service_healthy

networks:
  docker-network:

volumes:
  data-db:
    driver: local
  data-wp:
    driver: local
